[{"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\index.js":"1","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\App.js":"2","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\reportWebVitals.js":"3","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\Post.js":"4","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\FirebaseConfig.js":"5","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\SignUp.js":"6","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\Login.js":"7","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\UploadPost.js":"8","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\Comment.js":"9","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\PostFetching.js":"10","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\BtTxtPic.js":"11","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\ModelP.js":"12","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\DropDownP.js":"13","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\NavBar.js":"14","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\PostScreen.js":"15","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\PosterUser.js":"16","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\PosterUserWthBtn.js":"17","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\ProfilePage.js":"18","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\MiniPost.js":"19"},{"size":546,"mtime":1607251755289,"results":"20","hashOfConfig":"21"},{"size":1239,"mtime":1611075101368,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":4631,"mtime":1611074358855,"results":"24","hashOfConfig":"21"},{"size":550,"mtime":1608553123406,"results":"25","hashOfConfig":"21"},{"size":4166,"mtime":1610965239708,"results":"26","hashOfConfig":"21"},{"size":1991,"mtime":1607339122708,"results":"27","hashOfConfig":"21"},{"size":3293,"mtime":1610968141837,"results":"28","hashOfConfig":"21"},{"size":240,"mtime":1610965403915,"results":"29","hashOfConfig":"21"},{"size":728,"mtime":1611077988542,"results":"30","hashOfConfig":"21"},{"size":1382,"mtime":1611072536691,"results":"31","hashOfConfig":"21"},{"size":1210,"mtime":1611042388655,"results":"32","hashOfConfig":"21"},{"size":1136,"mtime":1611044630374,"results":"33","hashOfConfig":"21"},{"size":3669,"mtime":1611049308974,"results":"34","hashOfConfig":"21"},{"size":907,"mtime":1611053092425,"results":"35","hashOfConfig":"21"},{"size":746,"mtime":1611051614917,"results":"36","hashOfConfig":"21"},{"size":871,"mtime":1611051469097,"results":"37","hashOfConfig":"21"},{"size":2764,"mtime":1611057734038,"results":"38","hashOfConfig":"21"},{"size":985,"mtime":1611073539918,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"xcvfsv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\index.js",[],["82","83"],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\App.js",["84","85"],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\reportWebVitals.js",[],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\Post.js",["86","87","88","89","90","91","92","93"],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\FirebaseConfig.js",[],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\SignUp.js",["94"],"import React,{useEffect, useState} from 'react'\r\nimport \"./index.css\";\r\nimport FileUploader from 'react-firebase-file-uploader';\r\nimport {storage,auth, db} from \"./FirebaseConfig\";\r\nfunction SignUp() {\r\n    const [state, setstate] = useState({email:'',password:'',firstname:\"\",lastname:\"\",img:\"\"});\r\n    const [fs,setf]=useState(null);\r\n    const [suser,setuser]=useState(null);\r\n    const handlein=(e)=>{\r\n        const name=e.target.id;\r\n        const value=e.target.value;\r\n        setstate((prevalue)=>{\r\n                return{\r\n                    ...prevalue,\r\n                    [name]:value\r\n                }\r\n            })\r\n        }\r\n            const submit=(e)=>{\r\n                e.preventDefault();\r\n        console.log(state);\r\n\r\n            auth.createUserWithEmailAndPassword(state.email, state.password).then((user)=>{\r\n              auth.onAuthStateChanged((user) => {\r\n                if (user) {\r\n                  var uid = user.uid;\r\n                    console.log(uid);\r\n                    db.collection(\"users\").doc(uid).set({\r\n                        email:state.email,\r\n                        password:state.password,\r\n                        firstname:state.firstname,\r\n                        lastname:state.lastname,\r\n                        img:state.img\r\n                    })\r\n                } else {\r\n                    setuser(null);\r\n                    console.log(\"   ------datasave--error---\");\r\n              }});\r\n            }\r\n                \r\n            ).catch((error) => {\r\n              var errorCode = error.code;\r\n              var errorMessage = error.message;\r\n              console.log(errorCode+\"   ------\"+errorMessage)\r\n            });\r\n           \r\n            \r\n            }\r\n           \r\n            \r\n                            \r\n                           \r\nconst handleUploadSuccess = filename => {\r\n                        storage.ref(\"images\") \r\n                          .child(filename)\r\n                          .getDownloadURL()\r\n                          .then(url => { state.img= url;\r\nconsole.log(\"success\");     \r\nsetf(\"done\");\r\n                        }\r\n                          );\r\n                      };\r\n\r\n                      const handleUploadError = error => {\r\n                        console.error(error);\r\n                    };\r\n                    \r\nuseEffect(()=>{\r\n    auth.onAuthStateChanged((user) => {\r\n        if (user) {\r\n          var uid = user.uid;\r\n            console.log(uid);\r\n            setuser(user.uid);\r\n        } else {\r\n            setuser(null);\r\n            console.log(\"   ------datasave--error---\");\r\n      }});\r\n},[]);                      \r\n    return (\r\n        <form onSubmit={submit}>\r\n<h1 className=\"blacksimpletxt\" style={{color:\"#0d6efd\",textAlign:\"center\"}}>Sign Up</h1><br/>\r\n<div className=\"form-group\">\r\n    <input type=\"text\" className=\"form-control\" onChange={handlein} id=\"firstname\" autoComplete=\"off\" placeholder=\"Enter First Name\"/>\r\n  </div><br/>\r\n  <div className=\"form-group\">\r\n    <input type=\"text\" className=\"form-control\" onChange={handlein} id=\"lastname\" autoComplete=\"off\" placeholder=\"Enter Last Name\"/>\r\n  </div><br/>\r\n  <div className=\"form-group\">\r\n    <input type=\"email\" className=\"form-control\" onChange={handlein} id=\"email\" autoComplete=\"off\" placeholder=\"Enter email\"/>\r\n  </div><br/>\r\n  <div className=\"form-group\">\r\n    <input type=\"password\" className=\"form-control\"  onChange={handlein} id=\"password\" placeholder=\"Password\"/>\r\n  </div>    \r\n<br/>\r\n  <div className=\"form-group\">\r\n  <FileUploader className=\"component\"\r\n            accept='*' name='avatar'\r\n            randomizeFilename\r\n            storageRef={\r\n              storage.ref(\"images\")\r\n            }\r\n            onUploadStart = {null}\r\n            onUploadError = {handleUploadError}\r\n            onUploadSuccess = {handleUploadSuccess}\r\n            onProgress = {null}\r\n          /></div>\r\n          <p className=\"blacksimpletxt\">Profile Picture Status:{(fs===\"done\")?\"uploaded\":null}</p>\r\n\r\n  <br/>\r\n  <button type=\"submit\"  className=\"btn bttn btn-outline-primary\">SignUp</button>\r\n</form>\r\n\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\Login.js",["95","96","97","98","99","100","101"],"import React,{useEffect, useState} from 'react'\r\nimport \"./index.css\";\r\nimport FileUploader from 'react-firebase-file-uploader';\r\nimport {storage,auth, db} from \"./FirebaseConfig\";\r\nimport { setRef } from '@material-ui/core';\r\nfunction Login() {\r\n    const [state, setstate] = useState({email:'',password:''});\r\n    const [suser,setuser]=useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n    const [Error, setError] = useState(null)\r\n    const handlein=(e)=>{\r\n        const name=e.target.id;\r\n        const value=e.target.value;\r\n        setstate((prevalue)=>{\r\n                return{\r\n                    ...prevalue,\r\n                    [name]:value\r\n                }\r\n            })\r\n        }\r\n            const submit=(e)=>{\r\n                e.preventDefault();\r\n        console.log(state);\r\n        auth.signInWithEmailAndPassword(\r\n         state.email,\r\n          state.password\r\n        ).then(() => {\r\n          console.log('LOGIN_SUCCESS');\r\n          setSuccess(\"done\")\r\n        }).catch((err) => {\r\n          console.log('LOGIN_failed');\r\n          setError(\"error\")\r\n        });\r\n            }\r\n           \r\n            \r\n                            \r\n                           \r\n                                       \r\n    return (\r\n        <form onSubmit={submit}>\r\n<h1 className=\"blacksimpletxt\" style={{color:\"#0d6efd\",textAlign:\"center\"}}>Login</h1><br/>\r\n  <div className=\"form-group\">\r\n    <input type=\"email\" className=\"form-control\" onChange={handlein} id=\"email\" autoComplete=\"off\" placeholder=\"Enter email\"/>\r\n  </div><br/>\r\n  <div className=\"form-group\">\r\n    <input type=\"password\" className=\"form-control\"  onChange={handlein} id=\"password\" placeholder=\"Password\"/>\r\n  </div>    \r\n<br/>\r\n{(Error)?<p style={{color:\"red\"}}>Login Failed</p>:null}\r\n{(success)?<p style={{color:\"green\"}}>Login SucessFull</p>:null}\r\n  <button type=\"submit\"  className=\"btn bttn btn-outline-primary\">Login</button>\r\n</form>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\UploadPost.js",["102"],"import React,{useEffect, useState} from 'react'\r\nimport \"./index.css\";\r\nimport FileUploader from 'react-firebase-file-uploader';\r\nimport {storage,auth, db} from \"./FirebaseConfig\";\r\nfunction UploadPost({userinfo}) {\r\n    const [state, setstate] = useState({caption:'',img:\"\"});\r\n    const [fs,setf]=useState(null);\r\n    const [suser,setuser]=useState(null);\r\n    const handlein=(e)=>{\r\n        const name=e.target.id;\r\n        const value=e.target.value;\r\n        setstate((prevalue)=>{\r\n                return{\r\n                    ...prevalue,\r\n                    [name]:value\r\n                }\r\n            })\r\n        }\r\n            const submit=(e)=>{\r\n                e.preventDefault();\r\n        console.log(state);\r\n              auth.onAuthStateChanged((user) => {\r\n                if (user) {\r\n                  var uid = user.uid;\r\n                    console.log(uid);\r\n                    setuser(user.uid);\r\n                    db.collection('posts').add({\r\n                        postedBy:uid,\r\n                        avat:userinfo.img,\r\n                        username:userinfo.firstname+\" \"+userinfo.lastname,\r\n                        caption:state.caption,\r\n                        postimg:state.img\r\n                    }).then(()=>console.log(\"------datasaved--posted---\")).catch((error)=>{console.log(\"ufff\")})\r\n                } else {\r\n                    console.log(\"------datasave--error---\");\r\n              }});\r\n            }\r\n                           \r\nconst handleUploadSuccess = filename => {\r\n                        storage.ref(\"images\") \r\n                          .child(filename)\r\n                          .getDownloadURL()\r\n                          .then(url => { state.img= url;\r\nconsole.log(\"success\");     \r\nsetf(\"done\");\r\n                        }\r\n                          );\r\n                      };\r\n\r\n                      const handleUploadError = error => {\r\n                        console.error(error);\r\n                    };\r\n                    \r\nuseEffect(()=>{\r\n    auth.onAuthStateChanged((user) => {\r\n        if (user) {\r\n          var uid = user.uid;\r\n            console.log(uid);\r\n            setuser(user.uid);\r\n        } else {\r\n            setuser(null);\r\n            console.log(\"logged -in\");\r\n      }});\r\n},[]);                      \r\n    return (\r\n        <form onSubmit={submit}>\r\n<h1 className=\"blacksimpletxt\" style={{color:\"#0d6efd\",textAlign:\"center\"}}>Share Your Memories</h1><br/>\r\n<div className=\"form-group\">\r\n    <input type=\"text\" className=\"form-control\" onChange={handlein} id=\"caption\" autoComplete=\"off\" placeholder=\"Caption\"/>\r\n  </div><br/>\r\n  <div className=\"form-group\">\r\n  <FileUploader className=\"component\"\r\n            accept='*' name='avatar'\r\n            randomizeFilename\r\n            storageRef={\r\n              storage.ref(\"images\")\r\n            }\r\n            onUploadStart = {null}\r\n            onUploadError = {handleUploadError}\r\n            onUploadSuccess = {handleUploadSuccess}\r\n            onProgress = {null}\r\n          /></div>\r\n          {(fs===\"done\")?<p className=\"blacksimpletxt\">Profile Picture Status:Uploaded</p>:null}\r\n\r\n  <br/>\r\n  <button type=\"submit\"  className=\"btn bttn btn-outline-primary\">Upload Post</button>\r\n</form>\r\n\r\n    )\r\n}\r\n\r\nexport default UploadPost\r\n","C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\Comment.js",[],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\PostFetching.js",["103"],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\BtTxtPic.js",[],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\ModelP.js",[],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\DropDownP.js",["104"],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\NavBar.js",["105","106","107","108"],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\PostScreen.js",[],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\PosterUser.js",[],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\PosterUserWthBtn.js",["109"],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\ProfilePage.js",["110","111","112"],"C:\\Users\\Jawad Raza\\reacttut\\intaclone\\src\\MiniPost.js",["113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":20},{"ruleId":"118","severity":1,"message":"122","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":19},{"ruleId":"118","severity":1,"message":"123","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":44,"column":11,"nodeType":"126","endLine":44,"endColumn":56},{"ruleId":"124","severity":1,"message":"125","line":49,"column":24,"nodeType":"126","endLine":49,"endColumn":58},{"ruleId":"124","severity":1,"message":"125","line":49,"column":115,"nodeType":"126","endLine":49,"endColumn":154},{"ruleId":"124","severity":1,"message":"125","line":50,"column":1,"nodeType":"126","endLine":50,"endColumn":63},{"ruleId":"124","severity":1,"message":"125","line":55,"column":24,"nodeType":"126","endLine":55,"endColumn":58},{"ruleId":"124","severity":1,"message":"125","line":55,"column":124,"nodeType":"126","endLine":55,"endColumn":163},{"ruleId":"124","severity":1,"message":"125","line":95,"column":5,"nodeType":"126","endLine":95,"endColumn":85},{"ruleId":"118","severity":1,"message":"127","line":8,"column":12,"nodeType":"120","messageId":"121","endLine":8,"endColumn":17},{"ruleId":"118","severity":1,"message":"128","line":1,"column":15,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"129","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":20},{"ruleId":"118","severity":1,"message":"130","line":4,"column":9,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"131","line":4,"column":23,"nodeType":"120","messageId":"121","endLine":4,"endColumn":25},{"ruleId":"118","severity":1,"message":"132","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":16},{"ruleId":"118","severity":1,"message":"127","line":8,"column":12,"nodeType":"120","messageId":"121","endLine":8,"endColumn":17},{"ruleId":"118","severity":1,"message":"133","line":8,"column":18,"nodeType":"120","messageId":"121","endLine":8,"endColumn":25},{"ruleId":"118","severity":1,"message":"127","line":8,"column":12,"nodeType":"120","messageId":"121","endLine":8,"endColumn":17},{"ruleId":"118","severity":1,"message":"134","line":3,"column":12,"nodeType":"120","messageId":"121","endLine":3,"endColumn":16},{"ruleId":"124","severity":1,"message":"135","line":7,"column":9,"nodeType":"126","endLine":14,"endColumn":10},{"ruleId":"118","severity":1,"message":"128","line":1,"column":24,"nodeType":"120","messageId":"121","endLine":1,"endColumn":33},{"ruleId":"124","severity":1,"message":"125","line":69,"column":7,"nodeType":"126","endLine":69,"endColumn":70},{"ruleId":"124","severity":1,"message":"125","line":72,"column":1,"nodeType":"126","endLine":72,"endColumn":37},{"ruleId":"124","severity":1,"message":"125","line":75,"column":1,"nodeType":"126","endLine":75,"endColumn":65},{"ruleId":"124","severity":1,"message":"125","line":17,"column":1,"nodeType":"126","endLine":17,"endColumn":4},{"ruleId":"124","severity":1,"message":"125","line":17,"column":37,"nodeType":"126","endLine":19,"endColumn":37},{"ruleId":"124","severity":1,"message":"125","line":41,"column":7,"nodeType":"126","endLine":41,"endColumn":79},{"ruleId":"124","severity":1,"message":"125","line":45,"column":1,"nodeType":"126","endLine":45,"endColumn":46},{"ruleId":"124","severity":1,"message":"125","line":12,"column":2,"nodeType":"126","endLine":12,"endColumn":35},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'PostFetching' is defined but never used.","Identifier","unusedVar","'ProfilePage' is defined but never used.","'SmsIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'suser' is assigned a value but never used.","'useEffect' is defined but never used.","'FileUploader' is defined but never used.","'storage' is defined but never used.","'db' is defined but never used.","'setRef' is defined but never used.","'setuser' is assigned a value but never used.","'auth' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]