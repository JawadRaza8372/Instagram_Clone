[{"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\index.js":"1","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\reportWebVitals.js":"2","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\App.js":"3","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Navigation\\Routesss.js":"4","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Navigation\\NavBar.js":"5","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Navigation\\RoutesssLink.js":"6","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Home.js":"7","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\ProfilePage.js":"8","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Passwordupdate.js":"9","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\ProfilePhoto.js":"10","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\InfoUpdate.js":"11","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\BtTxtPic.js":"12","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\MiniPost.js":"13","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\PostScreen.js":"14","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\ModelP.js":"15","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\Post.js":"16","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\PostFetching.js":"17","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\PosterUserWthBtn.js":"18","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\PosterUser.js":"19","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\Comment.js":"20","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\SignUp.js":"21","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\Login.js":"22","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\DropDownP.js":"23","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\EditProfile.js":"24","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\UploadPost.js":"25","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\SignUpPage.js":"26","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\LoginPage.js":"27","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\FirebaseConfig\\FirebaseConfig.js":"28","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Search.js":"29","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\PosterUserFollowButton.js":"30"},{"size":649,"mtime":1625725196875,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1625721441244,"results":"33","hashOfConfig":"32"},{"size":1079,"mtime":1625735732393,"results":"34","hashOfConfig":"32"},{"size":1216,"mtime":1625824574188,"results":"35","hashOfConfig":"32"},{"size":2120,"mtime":1625824457116,"results":"36","hashOfConfig":"32"},{"size":1581,"mtime":1625824546744,"results":"37","hashOfConfig":"32"},{"size":742,"mtime":1625823564597,"results":"38","hashOfConfig":"32"},{"size":2687,"mtime":1625823679992,"results":"39","hashOfConfig":"32"},{"size":811,"mtime":1625724933386,"results":"40","hashOfConfig":"32"},{"size":2192,"mtime":1625725129680,"results":"41","hashOfConfig":"32"},{"size":911,"mtime":1625724933705,"results":"42","hashOfConfig":"32"},{"size":1382,"mtime":1625725471072,"results":"43","hashOfConfig":"32"},{"size":1680,"mtime":1625894618332,"results":"44","hashOfConfig":"32"},{"size":900,"mtime":1625823895144,"results":"45","hashOfConfig":"32"},{"size":990,"mtime":1625823281512,"results":"46","hashOfConfig":"32"},{"size":5855,"mtime":1625913133360,"results":"47","hashOfConfig":"32"},{"size":477,"mtime":1625908230344,"results":"48","hashOfConfig":"32"},{"size":1506,"mtime":1625913549941,"results":"49","hashOfConfig":"32"},{"size":825,"mtime":1625909962336,"results":"50","hashOfConfig":"32"},{"size":240,"mtime":1625724973072,"results":"51","hashOfConfig":"32"},{"size":4423,"mtime":1625816768432,"results":"52","hashOfConfig":"32"},{"size":2146,"mtime":1625736397108,"results":"53","hashOfConfig":"32"},{"size":1214,"mtime":1625725440674,"results":"54","hashOfConfig":"32"},{"size":1121,"mtime":1625725428001,"results":"55","hashOfConfig":"32"},{"size":2795,"mtime":1625895693934,"results":"56","hashOfConfig":"32"},{"size":469,"mtime":1625742375129,"results":"57","hashOfConfig":"32"},{"size":455,"mtime":1625736048829,"results":"58","hashOfConfig":"32"},{"size":550,"mtime":1625725012189,"results":"59","hashOfConfig":"32"},{"size":2079,"mtime":1625831161122,"results":"60","hashOfConfig":"32"},{"size":1201,"mtime":1625831230223,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"11sda38",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\index.js",[],["134","135"],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\reportWebVitals.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\App.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Navigation\\Routesss.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Navigation\\NavBar.js",["136","137","138"],"import React,{useState} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport UploadPost from \"../Screens/Components/UploadPost\";\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ModelP from \"../Screens/Components/ModelP\"\r\nimport DropdownP from \"../Screens/Components/DropDownP\"\r\nimport {Navbar,Nav} from \"react-bootstrap\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nfunction NavBar({suser,Data}) {\r\n    const [open3, setOpen3] =useState(false);\r\n    const [open4, setOpen4] =useState(false);\r\n    return (\r\n        <>\r\n\r\n{/* model 3 post wala */}\r\n<ModelP openModel={open3} closeModel={()=>{setOpen3(false)}} >\r\n<UploadPost userinfo={suser}/>\r\n    </ModelP>\r\n{/* model 4 notificationWala */}\r\n\r\n \r\n\r\n    <div className=\"app_header\">\r\n    <div className=\"row justify-content-center\">\r\n    <div className=\"col-10\">\r\n  <Navbar collapseOnSelect expand=\"lg\" bg=\"white\" variant=\"light\">\r\n  <Navbar.Brand href=\"/home\">\r\n  <img className=\"app_headerImg\" \r\n          src=\"http://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"logo\"/>\r\n  </Navbar.Brand>\r\n  <Navbar.Toggle style={{color:\"black\"}} aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n  <Nav style={{marginLeft:\"auto\"}}>\r\n   \r\n   {(suser===null)? <h5 style={{alignSelf:\"center\",color:\"red\"}}>Please Login</h5> : <>\r\n     <NavLink style={{color:\"black\"}} to=\"/\">\r\n<HomeIcon style={{fontSize:\"32\",marginLeft:\"5px\",marginRight:\"5px\"}}/></NavLink>\r\n\r\n<a   onClick={()=>{setOpen3(true)}}>\r\n<AddBoxIcon style={{fontSize:\"32\",marginLeft:\"5px\",marginRight:\"5px\"}}/></a>\r\n<NavLink style={{color:\"black\"}} to=\"/search\">\r\n<SearchIcon style={{fontSize:\"32\",marginLeft:\"5px\",marginRight:\"5px\"}}/></NavLink>\r\n<DropdownP>\r\n<Avatar style={{height:\"32px\",marginLeft:\"5px\"}}  src={`${Data.img}`} alt={`${Data.firstname}`}/>\r\n</DropdownP>\r\n\r\n\r\n\r\n\r\n    </>\r\n   }  \r\n   </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n</div>\r\n</div>\r\n</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Navigation\\RoutesssLink.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Home.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\ProfilePage.js",["139","140","141"],"import React,{useState,useEffect} from 'react'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport BtTxtPic from \"./Components/BtTxtPic\";\r\nimport MiniPost from \"./Components/MiniPost\";\r\nimport {Navbar,Nav} from \"react-bootstrap\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {db} from \"../FirebaseConfig/FirebaseConfig\"\r\nfunction ProfilePage({user,Data}) {\r\n    const [posts, setposts] = useState(null)\r\n    useEffect(()=>{\r\n        db.collection(\"posts\").orderBy('posttime','desc').onSnapshot((snapshot)=>{\r\n            setposts(snapshot.docs.map(doc=>(({id:doc.id,post:doc.data()}))))\r\n          }) \r\n        },[]);\r\n      if(Data){\r\n        return (\r\n            <div className=\"col-8 mx-auto mt-4\">\r\n             <div style={{display:\"flex\",alignItems:\"center\"}} className=\"row mt-2 mb-2\">\r\n            <div className=\"col-xs-10 col-sm-10 col-md-6 col-xl-4 col-lg-4 order-1 mb-3\">\r\n            <Avatar style={{width:'230px',height:'230px'}}  src={`${Data.img}`} alt=\"\"/>\r\n            </div>\r\n    <div style={{alignItems:\"center\"}} className=\"col-xs-10 col-sm-10 col-md-6 col-lg-8 col-xl-8 order-2 mb-3\">\r\n    \r\n    <div className=\"row mb-2\">\r\n       <div className=\"col\">\r\n       <h5 style={{marginRight:\"35px\"}}>{Data.firstname} {Data.lastname}</h5>\r\n       </div>\r\n       <div className=\"col\">\r\n       <p><NavLink to=\"/editinfo\" style={{cursor:\"pointer\"}} className=\"btn-outline-dark\">Edit Profile</NavLink></p>\r\n       </div>\r\n       </div>\r\n    \r\n    \r\n        <div className=\"row mb-2\">\r\n       \r\n       \r\n      <div className=\"col\"><p>{Data.posts} Posts</p> </div>\r\n      \r\n       <div className=\"col\">\r\n       <p>{Data.followers.length} Followers</p>\r\n       </div> \r\n       <div className=\"col\">\r\n       <p>{Data.following.length} Following</p>\r\n       </div> \r\n    \r\n    </div>\r\n    \r\n        <h6>{Data.email}</h6>\r\n    </div>\r\n            </div>\r\n    \r\n    \r\n    \r\n            <div  className=\"app_header2 overflow-hidden\">\r\n        <div style={{display:\"flex\",justifyContent:'center'}}>\r\n          <div style={{padding:\"15px\",cursor:\"pointer\"}} className=\"justhover\"><BtTxtPic text=\"Posts\" icon5=\"g\"/></div>\r\n          <div style={{padding:\"15px\",cursor:\"pointer\"}} className=\"justhover\"><BtTxtPic text=\"Saved\" icon3=\"g\"/></div>\r\n        </div>\r\n            </div>\r\n    \r\n    <div className=\"row mt-3\">\r\n        {posts && posts.map((postdat)=>{\r\n        if (postdat.post.postedBy === user){\r\n            return (\r\n            <MiniPost crntuser={user} data={postdat} key={postdat.id}/>)\r\n        }})\r\n        }\r\n        \r\n    </div>\r\n    \r\n            </div>\r\n        )\r\n      }\r\n    else{\r\n        return <h1>loading</h1>\r\n    }\r\n}\r\n\r\nexport default ProfilePage\r\n","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Passwordupdate.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\ProfilePhoto.js",["142","143","144","145","146"],"import React,{useState,useEffect} from 'react'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FileUploader from 'react-firebase-file-uploader';\r\nimport {storage,auth, db} from \"../FirebaseConfig/FirebaseConfig\";\r\nimport ModelP from \"./Components/ModelP\";\r\nfunction ProfilePhoto() {\r\n    const [state, setstate] = useState();\r\n    const [open, setOpen] =useState(false);\r\n\r\n    const [fs,setf]=useState(null);\r\n    const handleUploadSuccess = filename => {\r\n        storage.ref(\"images\") \r\n          .child(filename)\r\n          .getDownloadURL()\r\n          .then(url => { setstate(url);\r\nconsole.log(\"success\");     \r\nsetf(\"done\");\r\n        }\r\n          );\r\n      };\r\n\r\n      const handleUploadError = error => {\r\n        console.error(error);\r\n    };\r\n    return (\r\n        <div className=\" row my-auto justify-content-center\">\r\n        <div className=\"col-8\">\r\n        <center>\r\n            <h4>Update Profile Photo</h4>\r\n            <div style={{display:\"flex\",alignItems:\"center\"}} className=\"row mt-2 mb-2\">\r\n        <div className=\"mx-auto col-xs-10 col-sm-10 col-md-6 col-xl-4 col-lg-4 order-1\">\r\n        <a onClick={()=>{setOpen(true)}}><Avatar style={{height:\"180px\",width:\"180px\"}}   src=\"https://images.unsplash.com/photo-1503023345310-bd7c1de61c7d?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8aHVtYW58ZW58MHx8MHw%3D&ixlib=rb-1.2.1&w=1000&q=80\" alt=\"\"/>\r\n        </a></div></div>\r\n<p>Click on photo to Update</p>\r\n</center>\r\n        </div>\r\n        \r\n        <ModelP openModel={open} closeModel={()=>{setOpen(false)}} >\r\n     <h3>Upload Photo</h3>\r\n     <div className=\"form-group\">\r\n  <FileUploader className=\"component\"\r\n            accept='*' name='avatar'\r\n            randomizeFilename\r\n            storageRef={\r\n              storage.ref(\"images\")\r\n            }\r\n            onUploadStart = {null}\r\n            onUploadError = {handleUploadError}\r\n            onUploadSuccess = {handleUploadSuccess}\r\n            onProgress = {null}\r\n          />\r\n\r\n          </div>\r\n          <p className=\"blacksimpletxt\">Profile Picture Status:{(fs===\"done\")?\"uploaded\":null}</p>\r\n<button>Upload</button>\r\n     </ModelP>   \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePhoto\r\n","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\InfoUpdate.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\BtTxtPic.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\MiniPost.js",["147"],"import React,{useState,useEffect} from 'react'\r\nimport BtTxtPic from \"./BtTxtPic\"\r\nimport ModelP from './ModelP'\r\nimport Post from './Post'\r\nfunction MiniPost({crntuser,data}) {\r\n    const [open, setopen] = useState(false)\r\n    const [bgColor, setbgColor] = useState(\"transparent\");\r\n    useEffect(() => {\r\n      let x = Math.floor(Math.random() * 256);\r\n      let y = 100+ Math.floor(Math.random() * 256);\r\n      let z = 50+ Math.floor(Math.random() * 256);\r\n      setbgColor(\"rgb(\" + x + \",\" + y + \",\" + z + \")\")\r\n    }, [])\r\n    console.log(data)\r\n    return (\r\n      <>\r\n     <div className=\"col-lg-4 col-xl-4 col-md-6 col-sm-10 col-xs-10\">\r\n<div className=\"container\">\r\n{(data.post.postimg)?<img src={data.post.postimg} alt={data.post.caption} className=\"image\"/>:<div style={{width:\"100%\",height:\"135px\",display:\"grid\",placeItems:\"center\",overflowY:\"auto\",overflowX:\"hidden\",borderBottom:\"1px solid lightgrey\",borderTop:\"1px solid lightgrey\",background:bgColor}} ><p className=\"caption\">{data.post.caption}</p></div>\r\n}\r\n\r\n <a onClick={()=>{setopen(true)}}>\r\n  <div className=\"overlay\">\r\n  <div style={{display:\"grid\",placeItems:'center',height:'100%'}}>\r\n<BtTxtPic style={{marginRight:\"10px\"}} text2={`${data.post.likes.length}`} icon6=\"h\"/>\r\n{(data.post.comments)?<BtTxtPic text2={`${data.post.comments.length}`} icon7=\"h\"/>:null\r\n}\r\n  </div>\r\n  </div>\r\n</a>\r\n</div></div>\r\n<ModelP openModel={open} closeModel={()=>{setopen(false)}}>\r\n<Post postid={data.id} crntuser={crntuser} userid={data.post.postedBy} postimg={data.post.postimg} caption={data.post.caption} likes={data.post.likes} comments={data.post.comments}/>\r\n</ModelP>\r\n</>\r\n    )\r\n}\r\n\r\nexport default MiniPost\r\n","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\PostScreen.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\ModelP.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\Post.js",["148","149","150","151","152","153","154"],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\PostFetching.js",["155","156","157"],"import React,{useState,useEffect} from 'react'\r\nimport Post from \"./Post\";\r\nfunction PostFetching({crntuser,postdata}) {\r\n    return (\r\n        <div>\r\n        {postdata && postdata.map((avin)=>{return <Post key={avin.id} postid={avin.id} crntuser={crntuser} userid={avin.post.postedBy} postimg={avin.post.postimg} caption={avin.post.caption} likes={avin.post.likes} comments={avin.post.comments} key={avin.id}/>})\r\n\r\n    }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PostFetching\r\n","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\PosterUserWthBtn.js",["158"],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\PosterUser.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\Comment.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\SignUp.js",["159"],"import React,{useEffect, useState} from 'react'\r\nimport FileUploader from 'react-firebase-file-uploader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {storage,auth, db} from \"../../FirebaseConfig/FirebaseConfig\";\r\nfunction SignUp() {\r\n  let location=useHistory()\r\n    const [state, setstate] = useState({email:'',password:'',firstname:\"\",lastname:\"\",img:\"\"});\r\n    const [fs,setf]=useState(null);\r\n    const handlein=(e)=>{\r\n        const name=e.target.id;\r\n        const value=e.target.value;\r\n        setstate((prevalue)=>{\r\n                return{\r\n                    ...prevalue,\r\n                    [name]:value\r\n                }\r\n            })\r\n        }\r\n            const submit=(e)=>{\r\n                e.preventDefault();\r\n        console.log(state);\r\n\r\n            auth.createUserWithEmailAndPassword(state.email, state.password).then((user)=>{\r\n              auth.onAuthStateChanged((user) => {\r\n                if (user) {\r\n                  var uid = user.uid;\r\n                    console.log(uid);\r\n                    db.collection(\"users\").doc(uid).set({\r\n                        email:state.email,\r\n                        password:state.password,\r\n                        firstname:state.firstname,\r\n                        lastname:state.lastname,\r\n                        img:state.img,\r\n                        posts:'0',\r\n                        followers:[],\r\n                        following:[]\r\n                    })\r\n                } else {\r\n                    console.log(\"   ------datasave--error---\");\r\n              }});\r\n            }\r\n                \r\n            ).catch((error) => {\r\n              var errorCode = error.code;\r\n              var errorMessage = error.message;\r\n              console.log(errorCode+\"   ------\"+errorMessage)\r\n            });\r\n           \r\n            location.push('/')\r\n            }\r\n           \r\n            \r\n                            \r\n                           \r\nconst handleUploadSuccess = filename => {\r\n  setf(\"pending\");\r\n\r\n                        storage.ref(\"images\") \r\n                          .child(filename)\r\n                          .getDownloadURL()\r\n                          .then(url => { state.img= url;\r\nconsole.log(\"success\");     \r\nsetf(\"done\");\r\n                        }\r\n                          );\r\n                      };\r\n\r\n                      const handleUploadError = error => {\r\n                        console.error(error);\r\n                    };\r\n                    \r\nuseEffect(()=>{\r\n    auth.onAuthStateChanged((user) => {\r\n        if (user) {\r\n          var uid = user.uid;\r\n            console.log(uid);\r\n        } else {\r\n            console.log(\"   ------datasave--error---\");\r\n      }});\r\n},[]);                      \r\n    return (\r\n        <form onSubmit={submit}>\r\n<h1 className=\"blacksimpletxt\" style={{color:\"#0d6efd\",textAlign:\"center\"}}>Sign Up</h1><br/>\r\n<div className=\"form-group\">\r\n    <input type=\"text\" className=\"form-control\" onChange={handlein} id=\"firstname\" autoComplete=\"off\" placeholder=\"Enter First Name\"/>\r\n  </div><br/>\r\n  <div className=\"form-group\">\r\n    <input type=\"text\" className=\"form-control\" onChange={handlein} id=\"lastname\" autoComplete=\"off\" placeholder=\"Enter Last Name\"/>\r\n  </div><br/>\r\n  <div className=\"form-group\">\r\n    <input type=\"email\" className=\"form-control\" onChange={handlein} id=\"email\" autoComplete=\"off\" placeholder=\"Enter email\"/>\r\n  </div><br/>\r\n  <div className=\"form-group\">\r\n    <input type=\"password\" className=\"form-control\"  onChange={handlein} id=\"password\" placeholder=\"Password\"/>\r\n  </div>    \r\n<br/>\r\n  <div className=\"form-group\">\r\n  <FileUploader className=\"component\"\r\n            accept='*' name='avatar'\r\n            randomizeFilename\r\n            storageRef={\r\n              storage.ref(\"images\")\r\n            }\r\n            onUploadStart = {null}\r\n            accept=\"image/*\"\r\n            onUploadError = {handleUploadError}\r\n            onUploadSuccess = {handleUploadSuccess}\r\n            onProgress = {null}\r\n          /></div>\r\n{ fs && <p className=\"blacksimpletxt mt-3 mb-3\">Profile Picture Status{(fs===\"done\")?\": uploaded\":\": pending\"}</p>\r\n}\r\n  <br/>\r\n  <button type=\"submit\"  className=\"btn bttn btn-outline-primary mb-3\">SignUp</button>\r\n  <p onClick={()=>location.push('/login')} style={{marginTop:\"10px\",cursor:\"pointer\"}}>Hve an acount !! Login</p>\r\n\r\n</form>\r\n\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\Login.js",["160"],"import React,{useState,useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {auth} from \"../../FirebaseConfig/FirebaseConfig\";\r\nfunction Login() {\r\n  let location=useHistory()\r\n    const [state, setstate] = useState({email:'',password:''});\r\n    const [Error, setError] = useState(null)\r\n    const handlein=(e)=>{\r\n        const name=e.target.id;\r\n        const value=e.target.value;\r\n        setstate((prevalue)=>{\r\n                return{\r\n                    ...prevalue,\r\n                    [name]:value\r\n                }\r\n            })\r\n        }\r\n            const submit=(e)=>{\r\n                e.preventDefault();\r\n        console.log(state);\r\n        auth.signInWithEmailAndPassword(\r\n         state.email,\r\n          state.password\r\n        ).then(() => {\r\n          console.log('LOGIN_SUCCESS');\r\n          location.push('/')\r\n        }).catch((err) => {\r\n          console.log('LOGIN_failed');\r\n          setError(\"error\")\r\n        });\r\n            }\r\n               \r\n                            \r\n       useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setError(null)\r\n            }, 5000);\r\n        return () => clearInterval(interval);\r\n      }, [Error]);                \r\n                                       \r\n    return (<>\r\n        <form onSubmit={submit}>\r\n<h1 className=\"blacksimpletxt\" style={{color:\"#0d6efd\",textAlign:\"center\"}}>Login</h1><br/>\r\n  <div className=\"form-group\">\r\n    <input type=\"email\" className=\"form-control\" onChange={handlein} id=\"email\" autoComplete=\"off\" placeholder=\"Enter email\" required autoComplete=\"off\"/>\r\n  </div><br/>\r\n  <div className=\"form-group\">\r\n    <input type=\"password\" className=\"form-control\"  onChange={handlein} id=\"password\" placeholder=\"Password\"  required autoComplete=\"off\"/>\r\n  </div>    \r\n<br/>\r\n{(Error)?<p style={{color:\"red\"}}>Login Failed</p>:null}\r\n  <button type=\"submit\"  className=\"btn bttn btn-outline-primary mb-3\">Login</button>\r\n  <p onClick={()=>location.push('/signup')} style={{marginTop:\"10px\",cursor:\"pointer\"}}>Don't have an Account ??? SignUp</p>\r\n</form>\r\n   </> )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\DropDownP.js",["161","162","163"],"import React from \"react\";\r\nimport {Dropdown} from \"react-bootstrap\"\r\nimport BtTxtPic from \"./BtTxtPic\"\r\nimport {storage,auth, db} from \"../../FirebaseConfig/FirebaseConfig\";\r\n\r\nfunction DropDownP({children,data}) {\r\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n        <a\r\n          href=\"\"\r\n          ref={ref}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            onClick(e);\r\n          }}\r\n        >\r\n     {children}\r\n      \r\n        </a>\r\n      ));\r\n      \r\n    return (\r\n        <Dropdown>\r\n        <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n            {children}\r\n        </Dropdown.Toggle>\r\n          <Dropdown.Menu  align=\"left\">\r\n          <Dropdown.Item href=\"/Profile\"><BtTxtPic text=\"Profile\" icon1=\"g\" /></Dropdown.Item>\r\n            <Dropdown.Item href=\"#/action-1\"><BtTxtPic text=\"Setting\" icon2=\"g\" /></Dropdown.Item>\r\n            <Dropdown.Item href=\"#/action-2\"><BtTxtPic text=\"Saved\" icon3=\"g\" /></Dropdown.Item>\r\n            <Dropdown.Item onClick={()=>{auth.signOut();}}><BtTxtPic text=\"Logout\" icon4=\"g\" /></Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nexport default DropDownP\r\n","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\EditProfile.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\UploadPost.js",["164","165"],"import React,{useState} from 'react'\r\nimport FileUploader from 'react-firebase-file-uploader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {storage,auth, db} from \"../../FirebaseConfig/FirebaseConfig\";\r\nfunction UploadPost({userinfo}) {\r\n  let location=useHistory()\r\nconst [state, setstate] = useState({caption:'',img:\"\"});\r\n    const [fs,setf]=useState(null);\r\n    const handlein=(e)=>{\r\n        const name=e.target.id;\r\n        const value=e.target.value;\r\n        setstate((prevalue)=>{\r\n                return{\r\n                    ...prevalue,\r\n                    [name]:value\r\n                }\r\n            })\r\n        }\r\n            const submit=(e)=>{\r\n                e.preventDefault();\r\n        console.log(state);\r\n                    db.collection('posts').add({\r\n                        postedBy:userinfo,\r\n                        caption:state.caption,\r\n                        postimg:state.img,\r\n                        posttime:new Date(),\r\n                        likes:[],\r\n                        comments:[]\r\n\r\n                    }).then(()=>location.push('/')).catch((error)=>{console.log(\"ufff\")})\r\n\r\n                  }\r\n                           \r\nconst handleUploadSuccess = filename => {\r\n  setf(\"pending\");\r\n\r\n                        storage.ref(\"images\") \r\n                          .child(filename)\r\n                          .getDownloadURL()\r\n                          .then(url => { state.img= url;\r\nconsole.log(\"success\");     \r\nsetf(\"done\");\r\n                        }\r\n                          );\r\n                      };\r\n\r\n                      const handleUploadError = error => {\r\n                        console.error(error);\r\n                    };\r\n                    \r\n                  \r\n    return (\r\n        <form onSubmit={submit}>\r\n<h1 className=\"blacksimpletxt\" style={{color:\"#0d6efd\",textAlign:\"center\"}}>Share Your Memories</h1><br/>\r\n<div className=\"form-group\">\r\n    <input type=\"text\" className=\"form-control\" onChange={handlein} id=\"caption\" autoComplete=\"off\" placeholder=\"Caption\"/>\r\n  </div><br/>\r\n  <div className=\"form-group\">\r\n  <FileUploader className=\"component\"\r\n            accept='*' name='avatar'\r\n            randomizeFilename\r\n            storageRef={\r\n              storage.ref(\"images\")\r\n            }\r\n            accept=\"image/*\"\r\n            onUploadStart = {null}\r\n            onUploadError = {handleUploadError}\r\n            onUploadSuccess = {handleUploadSuccess}\r\n            onProgress = {null}\r\n          /></div>\r\n          { fs && <p className=\"blacksimpletxt mt-3 mb-3\">Profile Picture Status{(fs===\"done\")?\": uploaded\":\": pending\"}</p>\r\n}\r\n\r\n  <br/>\r\n  <button type=\"submit\"  className=\"btn bttn btn-outline-primary\">Upload Post</button>\r\n</form>\r\n\r\n    )\r\n}\r\n\r\nexport default UploadPost\r\n","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\SignUpPage.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\LoginPage.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\FirebaseConfig\\FirebaseConfig.js",[],"C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Search.js",["166"],"import React,{useState,useEffect} from 'react'\r\nimport PosterUserFollowButton from './Components/PosterUserFollowButton';\r\nimport {db} from \"../FirebaseConfig/FirebaseConfig\"\r\n\r\nfunction Search() {\r\n    const [inputv, setinputv] = useState('');\r\n    const [searchval, setsearchval] = useState('');\r\n\r\n    const [usersData, setusersData] = useState(null)\r\n    let submitfun=(e)=>{\r\n        e.preventDefault();\r\n        setsearchval(inputv)\r\n    }\r\n    useEffect(()=>{\r\n        db.collection(\"users\").onSnapshot((snapshot)=>{\r\n            setusersData(snapshot.docs.map(doc=>(({id:doc.id,post:doc.data()}))))\r\n          })\r\n        },[]);\r\n    return (\r\n        <>\r\n     <div className=\"col-xl-8 col-lg-8 col-md-10 col-sm-10 col-xs-10 mx-auto mt-4\">\r\n            <div  className=\"row justify-content-center\">\r\n            <div className=\"col-xs-10 col-sm-10 col-md-8 col-xl-6 col-lg-6\" ><center>\r\n            <form onSubmit={submitfun} style={{border:'1px solid green',borderRadius:\"20px\",overflow:\"hidden\"}}>\r\n            <div  className=\"row\">\r\n            <div className=\"col-xl-8 col-lg-8 col-md-8 col-sm-10 col-xs-10\" style={{alignItems:\"flex-start\"}} >\r\n            <input type=\"email\" onChange={(e)=>setinputv(e.target.value)} placeholder=\"Enter Email To Search\" style={{width:\"80%\",height:'40px',outlineWidth:\"0px\",border:\"none\",paddingLeft:\"10px\",marginLeft:\"10px\"}} />\r\n            </div>            \r\n            <div className=\"col-xl-4 col-lg-4 col-md-4 col-sm-10 col-xs-10\" >\r\n<button type=\"submit\" className=\"btn btn-outline-success\">Search</button>\r\n</div></div>\r\n</form>\r\n\r\n            </center>\r\n            </div>\r\n           </div>\r\n           <br/>\r\n<br/>\r\n\r\n    <div  className=\"row\">\r\n    {searchval && <h1>Results</h1>}\r\n<div className=\"row\">\r\n<center>\r\n{usersData && usersData.map((user)=>{\r\n    if(user.post.email === searchval){\r\n        return (<PosterUserFollowButton key={user.id} userinfo={user.post} userId={user.id} />)\r\n    }\r\n})\r\n\r\n}\r\n\r\n</center>\r\n</div>\r\n</div>\r\n\r\n\r\n         \r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","C:\\Users\\Qc\\Documents\\GitHub\\Instagram_Clone\\src\\Screens\\Components\\PosterUserFollowButton.js",["167","168","169","170","171","172"],"import React,{useState,useEffect} from \"react\";\r\nimport {auth, db} from \"../../FirebaseConfig/FirebaseConfig\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport BtTxtPic from './BtTxtPic';\r\n\r\nfunction PosterUserWthBtn({userinfo,userId}) {\r\n  \r\n  console.log(userId)\r\n  console.log(userinfo)\r\n   \r\n    return (\r\n        <div  className=\"col-10\">\r\n        <div style={{display:\"flex\",alignItems:\"center\"}} className=\"row mt-2 mb-2\">\r\n        <div className=\"col-xs-10 col-sm-6 col-md-4 col-lg-3 col-xl-3 mb-2 mr-1\">\r\n        <Avatar style={{height:\"80px\",width:\"80px\",marginLeft:\"5px\"}}  src={`${userinfo.img}`} alt={`${userinfo.firstname }`}/>\r\n        </div>\r\n<div  className=\"col-xs-10 col-sm-6 col-md-4 col-lg-3 col-xl-3 mb-2\">\r\n    <h5 style={{fontSize:\"auto\"}}>{userinfo.firstname+' '+' '+userinfo.lastname}</h5></div>\r\n    <div  className=\"col-xs-10 col-sm-6 col-md-4 col-lg-3 col-xl-3 mb-2\">\r\n\r\n    <h6 style={{fontSize:\"auto\"}}>{userinfo.email}</h6>\r\n</div>\r\n  <div className=\"col-xs-10 col-sm-6 col-md-4 col-lg-3 col-xl-3 mb-2 ml-2\">\r\n<button className=\"btn btn-outline-success\">\r\nFollow\r\n</button>\r\n  </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosterUserWthBtn\r\n",{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":13,"column":12,"nodeType":"179","messageId":"180","endLine":13,"endColumn":17},{"ruleId":"177","severity":1,"message":"181","line":13,"column":19,"nodeType":"179","messageId":"180","endLine":13,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":41,"column":1,"nodeType":"184","endLine":41,"endColumn":37},{"ruleId":"177","severity":1,"message":"185","line":5,"column":9,"nodeType":"179","messageId":"180","endLine":5,"endColumn":15},{"ruleId":"177","severity":1,"message":"186","line":5,"column":16,"nodeType":"179","messageId":"180","endLine":5,"endColumn":19},{"ruleId":"187","severity":1,"message":"188","line":62,"column":38,"nodeType":"189","messageId":"190","endLine":62,"endColumn":40},{"ruleId":"177","severity":1,"message":"191","line":1,"column":24,"nodeType":"179","messageId":"180","endLine":1,"endColumn":33},{"ruleId":"177","severity":1,"message":"192","line":4,"column":17,"nodeType":"179","messageId":"180","endLine":4,"endColumn":21},{"ruleId":"177","severity":1,"message":"193","line":4,"column":23,"nodeType":"179","messageId":"180","endLine":4,"endColumn":25},{"ruleId":"177","severity":1,"message":"194","line":7,"column":12,"nodeType":"179","messageId":"180","endLine":7,"endColumn":17},{"ruleId":"182","severity":1,"message":"183","line":32,"column":9,"nodeType":"184","endLine":32,"endColumn":42},{"ruleId":"182","severity":1,"message":"183","line":22,"column":2,"nodeType":"184","endLine":22,"endColumn":35},{"ruleId":"177","severity":1,"message":"195","line":15,"column":7,"nodeType":"179","messageId":"180","endLine":15,"endColumn":16},{"ruleId":"177","severity":1,"message":"196","line":39,"column":16,"nodeType":"179","messageId":"180","endLine":39,"endColumn":25},{"ruleId":"177","severity":1,"message":"197","line":41,"column":8,"nodeType":"179","messageId":"180","endLine":41,"endColumn":14},{"ruleId":"177","severity":1,"message":"198","line":41,"column":16,"nodeType":"179","messageId":"180","endLine":41,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":51,"column":8,"nodeType":"201","endLine":51,"endColumn":10,"suggestions":"202"},{"ruleId":"182","severity":1,"message":"183","line":125,"column":33,"nodeType":"184","endLine":125,"endColumn":66},{"ruleId":"182","severity":1,"message":"183","line":160,"column":5,"nodeType":"184","endLine":160,"endColumn":85},{"ruleId":"177","severity":1,"message":"203","line":1,"column":15,"nodeType":"179","messageId":"180","endLine":1,"endColumn":23},{"ruleId":"177","severity":1,"message":"191","line":1,"column":24,"nodeType":"179","messageId":"180","endLine":1,"endColumn":33},{"ruleId":"204","severity":1,"message":"205","line":6,"column":246,"nodeType":"206","messageId":"207","endLine":6,"endColumn":259},{"ruleId":"182","severity":1,"message":"183","line":38,"column":1,"nodeType":"184","endLine":38,"endColumn":60},{"ruleId":"204","severity":1,"message":"205","line":105,"column":13,"nodeType":"206","messageId":"207","endLine":105,"endColumn":29},{"ruleId":"204","severity":1,"message":"205","line":45,"column":135,"nodeType":"206","messageId":"207","endLine":45,"endColumn":153},{"ruleId":"177","severity":1,"message":"208","line":4,"column":9,"nodeType":"179","messageId":"180","endLine":4,"endColumn":16},{"ruleId":"177","severity":1,"message":"193","line":4,"column":23,"nodeType":"179","messageId":"180","endLine":4,"endColumn":25},{"ruleId":"182","severity":1,"message":"209","line":8,"column":9,"nodeType":"184","endLine":15,"endColumn":10},{"ruleId":"177","severity":1,"message":"192","line":4,"column":17,"nodeType":"179","messageId":"180","endLine":4,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":65,"column":13,"nodeType":"206","messageId":"207","endLine":65,"endColumn":29},{"ruleId":"187","severity":1,"message":"188","line":44,"column":35,"nodeType":"189","messageId":"190","endLine":44,"endColumn":37},{"ruleId":"177","severity":1,"message":"203","line":1,"column":15,"nodeType":"179","messageId":"180","endLine":1,"endColumn":23},{"ruleId":"177","severity":1,"message":"191","line":1,"column":24,"nodeType":"179","messageId":"180","endLine":1,"endColumn":33},{"ruleId":"177","severity":1,"message":"192","line":2,"column":9,"nodeType":"179","messageId":"180","endLine":2,"endColumn":13},{"ruleId":"177","severity":1,"message":"193","line":2,"column":15,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"210","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":18,"column":58,"nodeType":"213","messageId":"214","endLine":18,"endColumn":59},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'open4' is assigned a value but never used.","Identifier","unusedVar","'setOpen4' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Navbar' is defined but never used.","'Nav' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'auth' is defined but never used.","'db' is defined but never used.","'state' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'setLikess' is assigned a value but never used.","'likeed' is assigned a value but never used.","'setlikeed' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["217"],"'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'storage' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'BtTxtPic' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},"Update the dependencies array to be: [fetch]",{"range":"220","text":"221"},[1752,1754],"[fetch]"]